CSS 그리드에서
1fr은 1fraction 즉 사용가능한 공간을 이야기 한다.
만약 grid-column : 1fr을 쓴다면 페이지의 전체 너비를 다 쓰게 된다? 물론 그 전체 너비는 부모그리드 에서 설정 가능 하다. fr 설정도 부모그리드의
grid-template-columns, rows 속성에서 조정한다.
중요한것은 그리드는 기본적으로 높이 설정을 반드시 해야 한다는 점?

justify-self, align-self는 자식그리드에서 설정이 가능하다. 오직 그 자식만 속성에 영향을 받게 할수 있다는 점. 지름길은 place-self.

grid-auto-rows, grid-auto-columns 는 만약 네가 grid-template-rows, columns로 적당한 갯수의 그리드를 설정했다고 치자. 그런데 프로그램이 
서버쪽의 데이터갯수를 표현하게되어있는데 예상외로 데이터가 많다. 그래서 그리드가 어느순간 찌그러지기 시작했을때, 저 옵션을 써준다면 
자동적으로 부족한 column이나 row를 보충해준다. 만약 네가 몇개의 로우나 컬럼이 생기는지 상관하고 싶지 않다면 단지 저 값을 auto로 설정해 
주면 알아서 조정된다.

minmax 는 보통 repeat에서 쓰이게 된다. 그리드 컨텐츠 하나하나의 최소 크기와 최대크기를 정하는데, 만약 브라우져 창이 줄어든다면 일정이상 
줄어들다가 자동으로 최소크기에 맞춰진뒤, 그다음부터는 스크롤이 가능하게 된다. 즉, 컨텐츠 하나하나가 브라우져크기에 맞춰
찌그러지지않는다는 이야기.

Responsive design에 들어가는 auto-fit, auto-fill
한마디로 정의하면, auto-fill은 내가 갯수를 핸들링할수 없는 컨텐츠, 유저의 댓글창등등 수를 정해놓을수 없는 컨텐츠를 그리드로 디자인할때 유용하다.
창의 크기에 맞춰서 미리 정해진 그리드의 갯수를 무한정 늘리는 속성이다. 따라서 그리드의 갯수는 컨텐츠에 맞춰서 늘어난다.
auto-fit은 고정되어있는, 보여주기 위한 부분에 적합할듯 하다. 창의 크기에 맞춰서 컨텐츠가 늘어나며, minmax에 맞춰서 그 배치가 바뀐다.
